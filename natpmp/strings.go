// Code generated by "stringer -type=Error,Protocol -output=strings.go"; DO NOT EDIT.

package natpmp

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnsupportedVersion-1]
	_ = x[NotAuthorized-2]
	_ = x[NetworkFailure-3]
	_ = x[OutOfResources-4]
	_ = x[UnsupportedOpcode-5]
	_ = x[success-0]
}

const _Error_name = "successUnsupportedVersionNotAuthorizedNetworkFailureOutOfResourcesUnsupportedOpcode"

var _Error_index = [...]uint8{0, 7, 25, 38, 52, 66, 83}

func (i Error) String() string {
	if i < 0 || i >= Error(len(_Error_index)-1) {
		return "Error(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Error_name[_Error_index[i]:_Error_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UDP-1]
	_ = x[TCP-2]
}

const _Protocol_name = "UDPTCP"

var _Protocol_index = [...]uint8{0, 3, 6}

func (i Protocol) String() string {
	i -= 1
	if i < 0 || i >= Protocol(len(_Protocol_index)-1) {
		return "Protocol(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Protocol_name[_Protocol_index[i]:_Protocol_index[i+1]]
}
